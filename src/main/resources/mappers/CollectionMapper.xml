<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyc.recruit.model.dao.CollectionMapper">
    <resultMap id="BaseResultMap" type="com.lyc.recruit.model.pojo.Collection">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="position_id" jdbcType="INTEGER" property="positionId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , user_id, position_id, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from collection
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from collection
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.lyc.recruit.model.pojo.Collection">
        insert into collection (id, user_id, position_id,
                                create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.lyc.recruit.model.pojo.Collection">
        insert into collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="positionId != null">
                position_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                #{positionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lyc.recruit.model.pojo.Collection">
        update collection
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                position_id = #{positionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lyc.recruit.model.pojo.Collection">
        update collection
        set user_id     = #{userId,jdbcType=INTEGER},
            position_id = #{positionId,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByTwoId" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from collection
        where user_id = #{userId,jdbcType=INTEGER}
        and position_id = #{positionId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByTwoId" parameterType="map">
        delete
        from collection
        where user_id = #{userId,jdbcType=INTEGER}
          and position_id = #{positionId,jdbcType=INTEGER}
    </delete>

    <resultMap id="rmCollectionReq" type="com.lyc.recruit.model.request.CollectionReq">
        <id column="id" property="id"></id>
        <result column="user_id" property="userId"></result>
        <result column="position_id" property="positionId"></result>
        <result column="create_time" property="createTime"></result>
        <result column="update_time" property="updateTime"></result>
        <collection property="positionReq" select="com.lyc.recruit.model.dao.PositionMapper.selectById" column="position_id"></collection>
    </resultMap>
    <select id="selectCollectionPosition" resultMap="rmCollectionReq" parameterType="java.lang.Integer">
        select <include refid="Base_Column_List"/>
        from collection where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPositionId" parameterType="java.lang.Integer">
        delete
        from collection
        where position_id = #{positionId,jdbcType=INTEGER}
    </delete>
</mapper>